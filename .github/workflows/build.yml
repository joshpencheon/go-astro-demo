name: build

on:
  push:
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [amd64, arm64]
        exclude:
        # Don't build ARM/Windows:
        - os: windows
          arch: arm64

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Determine Go version from go.mod
      run: echo "GO_VERSION=$(grep "go 1." go.mod | cut -d " " -f 2)" >> $GITHUB_ENV
    - uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GO_VERSION }}
    - name: Build executable
      run: go build -o build/
      env:
        GOOS: ${{ matrix.os }}
        GOARCH: ${{ matrix.arch }}

  publish:
    runs-on: ubuntu-latest

    needs: build

    steps:
    - uses: ncipollo/release-action@v1
      with:
        artifacts: "build/*"
        tag: "latest"
        commit: "main"
        body: "Automated release of ${{ github.sha }}"
        token: ${{ secrets.GITHUB_TOKEN }}
